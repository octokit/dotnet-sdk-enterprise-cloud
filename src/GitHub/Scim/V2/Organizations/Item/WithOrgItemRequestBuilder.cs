// <auto-generated/>
using GitHub.Scim.V2.Organizations.Item.Users;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace GitHub.Scim.V2.Organizations.Item {
    /// <summary>
    /// Builds and executes requests for operations under \scim\v2\organizations\{org}
    /// </summary>
    public class WithOrgItemRequestBuilder : BaseRequestBuilder 
    {
        /// <summary>The Users property</summary>
        public UsersRequestBuilder Users
        {
            get => new UsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="WithOrgItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithOrgItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/scim/v2/organizations/{org}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="WithOrgItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithOrgItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/scim/v2/organizations/{org}", rawUrl)
        {
        }
    }
}
